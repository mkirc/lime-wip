#!/usr/bin/bash


_base_path="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# if Makefile.defs does not exist or is older than ./configure,
# run ./configure first.

DEFS_FILE=/lime/Makefile.defs
CONFIGURE=/lime-tools/configure
LIME_DIR=/lime
DEFAULT_MODEL=/model

trap cleanup SIGINT
trap cleanup SIGTERM
trap cleanup ERR

cleanup() {
    for f in "$DEFAULT_MODEL"/lime_*.x; do
        rm "$f"
    done

    cp "$_base_path"/Makefile.bak "$LIME_DIR"/Makefile \
        && rm "$_base_path"/Makefile.bak
}

run_configure() {
    if [[ ! -e "$DEFS_FILE" ]] || [[ "$DEFS_FILE" -ot "$CONFIGURE"  ]]; then
        bash "$CONFIGURE" "$DEFS_FILE"
        return $!
    fi
    return 0
}

backup_makefile() {
    [[ ! -e "$_base_path"/Makefile.bak ]] \
        && cp "$LIME_DIR"/Makefile "$_base_path"/Makefile.bak
}

patch_makefile() {
    if [[ "$_base_path"/Makefile.bak -nt "$LIME_DIR"/Makefile ]]; then
        sed -i 's/-lhdf5/-lhdf5_serial/g' "$LIME_DIR"/Makefile
        sed -i '/CCFLAGS += -DH5_NO_DEPRECATED_SYMBOLS/d' "$LIME_DIR"/Makefile
    fi
}

if [[ -x "$LIME_DIR"/lime ]]; then
    backup_makefile
    patch_makefile
    run_configure

    if [[ $# -eq 0 ]]; then
        cd "$DEFAULT_MODEL"
        bash "$LIME_DIR"/lime -n /model.c
    else
        bash "$LIME_DIR"/lime "$@"
    fi
else
    echo "lime excutable (${LIME}) not found."
    exit 3
fi

# cleanup



